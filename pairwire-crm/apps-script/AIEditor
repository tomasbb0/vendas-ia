<!DOCTYPE html>
<html>
  <head>
    <base target="_top">
    <link href="https://fonts.googleapis.com/css2?family=Google+Sans:wght@400;500&display=swap" rel="stylesheet">
    <style>
      *, *:before, *:after { box-sizing: border-box; }
      body {
        font-family: 'Google Sans', 'Roboto', 'Arial', sans-serif;
        margin: 0; background-color: #ffffff; border-radius: 8px;
        box-shadow: 0 1px 2px 0 rgba(60,64,67,0.3), 0 2px 6px 2px rgba(60,64,67,0.15);
        padding: 24px; color: #3c4043; line-height: 1.5; display: flex;
        flex-direction: column; justify-content: flex-start; align-items: center;
        width: 100%; min-height: 100vh; overflow-y: auto;
      }
      body > * { width: 100%; max-width: 500px; }
      h5 { font-size: 1.125rem; font-weight: 500; color: #202124; margin-top: 0; margin-bottom: 8px; }
      textarea {
        width: 100%; padding: 12px 16px; border: 1px solid #dadce0;
        border-radius: 24px; /* Super round corners */
        font-size: 1rem; font-family: inherit; color: #202124; margin-bottom: 20px;
        transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        resize: none; /* Disable manual resize for auto-growing */
        min-height: 50px; /* Start smaller */
        overflow-y: hidden; /* Hide scrollbar until needed */
      }
      textarea:focus { outline: none; border-color: #1a73e8; box-shadow: 0 0 0 1px #1a73e8; }
      #resultsArea { margin-top: 20px; width: 100%; border-top: 1px solid #eee; padding-top: 20px; }
      .result-file-header {
        background-color: #e8f0fe; padding: 12px 16px; border-radius: 8px; margin-bottom: 5px;
        cursor: pointer; display: flex; justify-content: space-between; align-items: center;
        font-weight: 500; color: #1a73e8;
      }
      .result-file-header:hover { background-color: #d2e3fc; }
      .arrow {
        border: solid #1a73e8; border-width: 0 2px 2px 0; display: inline-block; padding: 4px;
        transform: rotate(45deg); transition: transform 0.3s ease-in-out;
      }
      .arrow.up { transform: rotate(-135deg); }
      .result-file-content {
        max-height: 0; overflow: hidden; transition: max-height 0.3s ease-in-out, padding 0.3s ease-in-out;
        background-color: #fcfcfc; border: 1px solid #dadce0; border-top: none;
        border-radius: 0 0 8px 8px; padding: 0 16px;
      }
      .result-file-content.expanded { max-height: 600px; overflow-y: auto; padding: 12px 16px; }
      .result-file-content pre {
        white-space: pre-wrap; word-wrap: break-word; font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
        font-size: 0.9rem; margin: 0;
      }
      .bottom-button-group { display: flex; gap: 10px; margin-top: 20px; }
      .bottom-button-group button {
        flex: 1; padding: 12px 24px; border-radius: 8px; font-size: 1rem;
        font-weight: 500; cursor: pointer; border: none; transition: background-color 0.2s;
      }
      .update-button { background-color: #34a853; color: white; }
      .update-button:hover { background-color: #2d8a41; }
      .reject-button { background-color: #ea4335; color: white; }
      .reject-button:hover { background-color: #c9352c; }
      .main-button {
        background-color: black; /* Black button */
        color: white; display: block; width: 100%;
        padding: 12px 24px; border: none;
        border-radius: 24px; /* Super round corners to match textarea */
        font-size: 1rem; font-weight: 500; cursor: pointer;
        transition: background-color 0.2s, box-shadow 0.2s;
        margin-top: 10px;
      }
      .main-button:hover {
        background-color: #fe5202; /* Your requested dark orange hover */
        box-shadow: 0 1px 3px rgba(60, 64, 67, .3);
      }
      #status { margin-top: 20px; font-size: 0.875rem; text-align: center; color: #5f6368; min-height: 20px; }
    </style>
  </head>
  <body>
    <!-- Friendlier title -->
    <h5>What do you want to change?</h5>
    <!-- The SAFE way to do auto-growing, using the same simple "on..." attribute -->
    <textarea id="feedbackText" placeholder="e.g., 'Make the button in ApiKeyDialog.html bigger'" oninput="this.style.height = 'auto'; this.style.height = (this.scrollHeight) + 'px';"></textarea>
    
    <button class="main-button" onclick="submitFeedback()">Get AI Proposal</button>

    <div id="resultsArea" style="display: none;">
      <h5>AI's Proposed Changes:</h5>
      <div id="proposedChangesList"></div>
      <div class="bottom-button-group">
        <button class="update-button" onclick="updateRepository()">Update Repository</button>
        <button class="reject-button" onclick="rejectProposal()">Reject & Get New Proposal</button>
      </div>
    </div>

    <div id="status"></div>

    <script>
      let aiProposedChanges = []; 
      let originalUserFeedback = ""; 
      let originalContext = null;

      function submitFeedback() {
        originalUserFeedback = document.getElementById('feedbackText').value.trim();
        
        if (!originalUserFeedback) {
            document.getElementById('status').innerText = 'Please enter a command for the AI.';
            return;
        }

        document.getElementById('status').innerText = 'Analyzing your project & getting AI proposal...';
        document.getElementById('resultsArea').style.display = 'none';
        
        google.script.run
          .withSuccessHandler(function(response) {
            if (response.success) {
              originalContext = response.originalContext;
              aiProposedChanges = response.proposedChanges; 
              displayProposedChanges(response.proposedChanges);
              document.getElementById('status').innerText = 'AI Proposal Ready. Review and Decide.';
              document.getElementById('resultsArea').style.display = 'block';
            } else {
              document.getElementById('status').innerText = 'Error: ' + response.message;
            }
          })
          .withFailureHandler(function(error) {
             document.getElementById('status').innerText = 'Script failed: ' + error.message;
             console.error(error);
          })
          .processAiRequest(originalUserFeedback);
      }

      function displayProposedChanges(changes) {
          const listContainer = document.getElementById('proposedChangesList');
          listContainer.innerHTML = ''; 

          if (changes.length === 0) {
              listContainer.innerHTML = '<p>AI did not propose any changes.</p>';
              return;
          }

          changes.forEach(change => {
              const header = document.createElement('div');
              header.className = 'result-file-header';
              header.innerHTML = `<span>${change.fileName}</span><span class="arrow"></span>`;
              header.onclick = function() {
                  this.nextElementSibling.classList.toggle('expanded');
                  this.querySelector('.arrow').classList.toggle('up');
              };

              const contentDiv = document.createElement('div');
              contentDiv.className = 'result-file-content';
              contentDiv.innerHTML = `<pre>${escapeHtml(change.newContent)}</pre>`;

              listContainer.appendChild(header);
              listContainer.appendChild(contentDiv);
          });
      }

      function escapeHtml(text) {
          return text.replace(/&/g, '&').replace(/</g, '<').replace(/>/g, '>').replace(/"/g, '"').replace(/'/g, ''');
      }

      function updateRepository() {
          if (aiProposedChanges.length === 0) return;
          document.getElementById('status').innerText = 'Saving changes to Repository...';
          google.script.run
              .withSuccessHandler(function(response) {
                  document.getElementById('status').innerText = response.message;
                  document.getElementById('resultsArea').style.display = 'none'; 
              })
              .withFailureHandler(function(error) {
                  document.getElementById('status').innerText = 'Error updating repository: ' + error.message;
              })
              .applyProposedChangesToRepository(aiProposedChanges, originalUserFeedback);
      }

      function rejectProposal() {
          document.getElementById('status').innerText = 'Rejecting... Getting new proposal...';
          submitFeedback();
      }
    </script>
  </body>
</html>
